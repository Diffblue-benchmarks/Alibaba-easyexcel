package com.alibaba.excel.analysis.v03.handlers;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.core.Is.is;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import org.apache.poi.hssf.record.Record;
import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.excel.analysis.v03.handlers.BlankOrErrorRecordHandler
 *
 * @author Diffblue Cover
 */

class BlankOrErrorRecordHandlerTest {

    @Test
    void factory() {
        BlankOrErrorRecordHandler blankOrErrorRecordHandler =
             new BlankOrErrorRecordHandler();
        assertThat(blankOrErrorRecordHandler.getOrder(), is(0));
        assertThat(blankOrErrorRecordHandler.getCellData(), is(nullValue()));
        assertThat(blankOrErrorRecordHandler.getColumn(), is(-1));
        assertThat(blankOrErrorRecordHandler.getRow(), is(-1));
    }

    @Test
    void support1() throws CloneNotSupportedException {
        Record record = mock(Record.class);
        when(record.getSid())
            .thenReturn(513);
        assertThat(new BlankOrErrorRecordHandler().support(record), is(true));
    }

    @Test
    void support2() throws CloneNotSupportedException {
        Record record = mock(Record.class);
        when(record.getSid())
            .thenReturn(1)
            .thenReturn(517);
        assertThat(new BlankOrErrorRecordHandler().support(record), is(true));
    }

    @Test
    void supportReturnsFalse() throws CloneNotSupportedException {
        Record record = mock(Record.class);
        when(record.getSid())
            .thenReturn(1)
            .thenReturn(0);
        assertThat(new BlankOrErrorRecordHandler().support(record), is(false));
    }

    @Test
    void processRecord() throws CloneNotSupportedException {
        Record record = mock(Record.class);
        when(record.getSid())
            .thenReturn(1)
            .thenReturn(0);
        new BlankOrErrorRecordHandler().processRecord(record);
    }

    @Test
    void init() {
        new BlankOrErrorRecordHandler().init();
    }
}
