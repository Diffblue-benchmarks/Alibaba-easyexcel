package com.alibaba.excel.metadata.property;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.core.Is.is;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import com.alibaba.excel.annotation.write.style.ContentRowHeight;
import com.alibaba.excel.annotation.write.style.HeadRowHeight;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.alibaba.excel.metadata.property.RowHeightProperty
 *
 * @author Diffblue Cover
 */

class RowHeightPropertyTest {

    @Test
    void factory() {
        RowHeightProperty rowHeightProperty = new RowHeightProperty((short) 1);
        rowHeightProperty.setHeight((short) 1);
        assertThat(rowHeightProperty.getHeight(), is((short) 1));
    }

    @Test
    void build3() {
        HeadRowHeight headRowHeight = mock(HeadRowHeight.class);
        when(headRowHeight.value())
            .thenReturn(1)
            .thenReturn(0);
        assertThat(RowHeightProperty.build(headRowHeight).getHeight(), is((short) 0));
    }

    @Test
    void build4() {
        HeadRowHeight headRowHeight = mock(HeadRowHeight.class);
        when(headRowHeight.value())
            .thenReturn(-1);
        assertThat(RowHeightProperty.build(headRowHeight), is(nullValue()));
    }

    @Test
    void build1() {
        ContentRowHeight contentRowHeight = mock(ContentRowHeight.class);
        when(contentRowHeight.value())
            .thenReturn(1)
            .thenReturn(0);
        assertThat(RowHeightProperty.build(contentRowHeight).getHeight(), is((short) 0));
    }

    @Test
    void build2() {
        ContentRowHeight contentRowHeight = mock(ContentRowHeight.class);
        when(contentRowHeight.value())
            .thenReturn(-1);
        assertThat(RowHeightProperty.build(contentRowHeight), is(nullValue()));
    }

    @Test
    void build5() {
        assertThat(RowHeightProperty.build((ContentRowHeight) null), is(nullValue()));
        assertThat(RowHeightProperty.build((HeadRowHeight) null), is(nullValue()));
    }
}
